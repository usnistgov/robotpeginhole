<?xml version="1.0" encoding="UTF-8"?>
<launch>
<arg name="my_ns" default="lrmate"/>
<!--<group ns="$(arg my_ns)">-->

   <!-- overwriting these args -->
   <arg name="rvizconfig" default="$(find fanuc_lrmate200id_support)/config/urdf.rviz" />
   <arg name="aprs" default="false" />
   <!--<arg name="ns" default="/" />-->
   <arg name="debug" default="false" />
   <arg name="gui" default="true" />
   <arg name="pause" default="false" />
   <arg name="world" default="$(find fanuc_lrmate200id_support)/world/aprs-lab.world" />
   <arg name="use_gui" default="false" />
 
  <arg name="ns" value="/" />

   <!-- Load the aprs pair robots into the ROS Parameter Server-->
   <arg if="$(arg aprs)" name="robot" value="aprs" />
   <param if="$(arg aprs)" name="$(arg ns)robot_description" command="$(find xacro)/xacro --inorder '$(find fanuc_lrmate200id_support)/urdf/tworobots.xacro'" />
  <param if="$(arg aprs)" name="$(arg ns)robot_description_semantic" textfile="$(find fanuc_lrmate200id_support)/config/aprs.srdf" />
  <arg if="$(arg aprs)" name="robotxyz" value="-x 0.0  -y 0.0 -z 0.0" />
  <param if="$(arg aprs)" name="robotxyz" value="-x 0.0  -y 0.0 -z 0.0" />

   <!-- Load the fanuc_lrmate200id  into the ROS Parameter Server-->
   <arg unless="$(arg aprs)" name="robot" value="fanuc_lrmate200id" />
   <arg unless="$(arg aprs)" name="robotxyz" value="-x -0.169  -y -1.140 -z 0.934191" />
   <param unless="$(arg aprs)" name="robotxyz" value="-x -0.169  -y -1.140 -z 0.934191" />
   <param unless="$(arg aprs)" name="$(arg ns)robot_description" textfile="$(find fanuc_lrmate200id_support)/urdf/lrmate200id.urdf" />
   <param unless="$(arg aprs)" name="$(arg ns)robot_description_semantic" textfile="$(find fanuc_lrmate200id_support)/config/fanuc_lrmate200id.srdf" />
   

   <!-- include gazebo_ros launcher -->
   <include file="$(find gazebo_ros)/launch/empty_world.launch" >
      <arg name="world_name" value="$(arg world)" />
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg pause)" />
      <arg name="use_sim_time" value="true" />
   </include>

   <!-- Set the param that trajectory_execution_manager needs to find the controller plugin -->
   <param name="moveit_controller_manager" value="moveit_fake_controller_manager/MoveItFakeControllerManager" />

   <!-- The rest of the params are specific to this plugin -->
   <rosparam file="$(find fanuc_lrmate200id_support)/config/fake_controllers.yaml" />

  <param  name="robot_description1"  command="$(find xacro)/xacro --inorder '$(find fanuc_lrmate200id_support)/urdf/tworobots.xacro'" />
   <node name="spawn_urdf1" pkg="gazebo_ros" type="spawn_model" args="-param robot_description1 $(arg robotxyz) -urdf -model aprs" respawn="false" output="screen" />

   <!-- Run the main MoveIt executable with trajectory execution (we do not have controllers configured by default) -->
   <include file="$(find fanuc_lrmate200id_support)/launch/move_group.launch" pass_all_args="true">
      <arg name="allow_trajectory_execution" value="true" />
      <arg name="fake_execution" value="true" />
      <arg name="info" value="true" />
      <arg name="debug" value="false" />
      <arg name="robot_description" value="$(arg ns)robot_description" />
   </include>

   <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot 
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model arm -param robot_description"/>  -->
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false" />
      <rosparam param="source_list">["crcl/joint_states"]</rosparam>
   </node>
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
   <!--
 <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
-->
<!--</group>-->
</launch>
